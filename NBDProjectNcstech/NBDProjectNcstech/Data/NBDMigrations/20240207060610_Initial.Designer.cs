// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBDProjectNcstech.Data;

#nullable disable

namespace NBDProjectNcstech.Data.NBDMigrations
{
    [DbContext(typeof(NBDContext))]
    [Migration("20240207060610_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("NBDProjectNcstech.Models.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProvinceID")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ProvinceID");

                    b.HasIndex("Name", "ProvinceID")
                        .IsUnique();

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Inventory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ItemTypeID");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.ItemType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Labour", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("LabourPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("LabourType")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LavourCost")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Labours");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.LabourRequirments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<double>("ExtendedPrice")
                        .HasColumnType("REAL");

                    b.Property<int>("Hours")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LabourID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("LabourID");

                    b.ToTable("LabourRequirments");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.MaterialRequirments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("InventoryID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Quanity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("SizeH")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SizeL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SizeW")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("InventoryID");

                    b.ToTable("MaterialRequirments");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BidAmount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("BidDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Est_BeginDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Est_CompleteDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectSite")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Province", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.City", b =>
                {
                    b.HasOne("NBDProjectNcstech.Models.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Client", b =>
                {
                    b.HasOne("NBDProjectNcstech.Models.City", "City")
                        .WithMany("Clients")
                        .HasForeignKey("CityID");

                    b.Navigation("City");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Inventory", b =>
                {
                    b.HasOne("NBDProjectNcstech.Models.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeID");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.LabourRequirments", b =>
                {
                    b.HasOne("NBDProjectNcstech.Models.Labour", "Labour")
                        .WithMany("LabourRequirments")
                        .HasForeignKey("LabourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Labour");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.MaterialRequirments", b =>
                {
                    b.HasOne("NBDProjectNcstech.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Project", b =>
                {
                    b.HasOne("NBDProjectNcstech.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.City", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Labour", b =>
                {
                    b.Navigation("LabourRequirments");
                });

            modelBuilder.Entity("NBDProjectNcstech.Models.Province", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
